name: Build, Test, Deploy .NET Web API to Azure

on:
  push:
    branches:
      - main
      - develop

env:
  DOTNET_VERSION: '8.0.x'
  AZURE_RESOURCE_GROUP: 'BlogAppResourceGroup'
  AZURE_CONTAINER_REGISTRY: 'blogapi'
  DOCKER_IMAGE: 'blogapp.api'
  SQL_USERNAME: 'user'
  SQL_PASSWORD: 'Password@123'
  AZURE_SQL_DB: 'BlogAppDb'
  AZURE_SQL_SERVER: 'blogapp-db-server'
  AZURE_WEBAPP_NAME: 'blogapi'
  AZURE_WEBAPP_URL: https://blogapi-c7dndnh2g8djgqfd.westus2-01.azurewebsites.net

jobs: 
  build-test-deploy:
    runs-on: ubuntu-latest
    environment: 
      name: Development
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        
      - name: setup .NET
        uses: actions/setup-dotnet@v4
        with: 
          dotnet-version: ${{ env.DOTNET_VERSION }}
          
      - name: Restore dependencies 
        run: dotnet restore
        
      - name: Build solution
        run: dotnet build --no-restore --configuration Release
        
      - name: Run tests
        run: dotnet test --configuration Release --verbosity normal --no-restore
        
      - name: Login to Azure
        uses: azure/login@v1
        with: 
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: Login to Azure ACR
        run: az acr login --name ${{ env.AZURE_CONTAINER_REGISTRY }}
        
      - name: Build Docker image
#        working-directory: src/BlogApp.API      
        run: docker build -t ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.DOCKER_IMAGE }} -f src/BlogApp.API/Dockerfile .
        
      - name: Tag Docker image
        run: docker tag ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.DOCKER_IMAGE }} ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.DOCKER_IMAGE }}:latest
      
      - name: Push Docker image to ACR
        run: docker push ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.DOCKER_IMAGE }}:latest
        
      - name: Allow GitHub Runner IP
        run: |
          RUNNER_IP=$(curl -s https://api.ipify.org)
          az sql server firewall-rule create \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --server ${{ env.AZURE_SQL_SERVER }} \
            --name "GHActions-$(date +%s)" \
            --start-ip-address "$RUNNER_IP" \
            --end-ip-address "$RUNNER_IP"
        
      - name: Deploy Config
        run: |
          az webapp config appsettings set \
            --name ${{ env.AZURE_WEBAPP_NAME }} \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --settings \
              ConnectionStrings__DefaultConnection="${{ secrets.CONNECTIONSTRINGS__DEFAULTCONNECTION }}" \
              Jwt__Key="${{ secrets.JWT_SECRET }}"
          
      - name: Test DB Connection
        run: |
          curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y mssql-tools unixodbc-dev
          sqlcmd -S "${AZURE_SQL_SERVER}.database.windows.net" \
                 -U "${{ secrets.SQL_USERNAME }}" \
                 -P "${{ env.SQL_PASSWORD }}" \
                 -d "${{ env.AZURE_SQL_DB }}" \
                 -Q "SELECT 1"
        
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with: 
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          images: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.DOCKER_IMAGE }}:latest
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          
      - name: Verify deployment
        run: |
          sleep 40 # Wait for app to start
          curl -sSf ${{ env.AZURE_WEBAPP_URL }}/swagger/index.html
          echo "Deployment verified!!"
