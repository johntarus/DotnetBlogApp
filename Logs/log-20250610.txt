[2025-06-10 12:21:52 INF] User profile is available. Using '/home/tarus/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
[2025-06-10 12:21:53 INF] Now listening on: http://localhost:5263
[2025-06-10 12:21:53 INF] Application started. Press Ctrl+C to shut down.
[2025-06-10 12:21:53 INF] Hosting environment: Development
[2025-06-10 12:21:53 INF] Content root path: /home/tarus/Desktop/personal/Playground/dotnet/DotnetBlogApp
[2025-06-10 12:21:53 INF] Request starting HTTP/1.1 GET http://localhost:5263/swagger/index.html - null null
[2025-06-10 12:21:53 INF] Request finished HTTP/1.1 GET http://localhost:5263/swagger/index.html - 200 null text/html;charset=utf-8 181.9082ms
[2025-06-10 12:21:54 INF] Request starting HTTP/1.1 GET http://localhost:5263/swagger/v1/swagger.json - null null
[2025-06-10 12:21:54 INF] Request finished HTTP/1.1 GET http://localhost:5263/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 208.2903ms
[2025-06-10 12:22:19 INF] Request starting HTTP/1.1 GET http://localhost:5263/api/categories/5 - null null
[2025-06-10 12:22:19 WRN] Failed to determine the https port for redirect.
[2025-06-10 12:22:19 INF] Executing endpoint 'BlogApp.Controllers.CategoryController.GetCategoryById (BlogApp)'
[2025-06-10 12:22:19 INF] Route matched with {action = "GetCategoryById", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCategoryById(Int32) on controller BlogApp.Controllers.CategoryController (BlogApp).
[2025-06-10 12:22:19 INF] Executing action method BlogApp.Controllers.CategoryController.GetCategoryById (BlogApp) - Validation state: "Valid"
[2025-06-10 12:22:19 INF] Fetching category with ID: 5
[2025-06-10 12:22:21 WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
[2025-06-10 12:22:22 INF] Executed DbCommand (96ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [c1].[Id], [c1].[Name], [s0].[Id], [s0].[CategoryId], [s0].[Content], [s0].[CreatedAt], [s0].[Slug], [s0].[Title], [s0].[UpdatedAt], [s0].[UserId], [s0].[Id0], [s0].[Avatar], [s0].[Bio], [s0].[CreatedAt0], [s0].[Email], [s0].[EmailVerificationToken], [s0].[EmailVerificationTokenExpiresAt], [s0].[IsActive], [s0].[IsEmailVerified], [s0].[PasswordHash], [s0].[RefreshToken], [s0].[RefreshTokenExpiresAt], [s0].[Role], [s0].[UpdatedAt0], [s0].[Username], [s0].[PostsId], [s0].[TagsId], [s0].[Id1], [s0].[CreatedAt1], [s0].[Name], [s0].[UpdatedAt1], [s0].[Id2], [s0].[CreateAt], [s0].[PostId], [s0].[UserId0], [s0].[Id3], [s0].[Content0], [s0].[CreatedAt2], [s0].[IsEdited], [s0].[PostId0], [s0].[UpdatedAt2], [s0].[UserId1]
FROM (
    SELECT TOP(1) [c].[Id], [c].[Name]
    FROM [Categories] AS [c]
    WHERE [c].[Id] = @__id_0
) AS [c1]
LEFT JOIN (
    SELECT [p].[Id], [p].[CategoryId], [p].[Content], [p].[CreatedAt], [p].[Slug], [p].[Title], [p].[UpdatedAt], [p].[UserId], [u].[Id] AS [Id0], [u].[Avatar], [u].[Bio], [u].[CreatedAt] AS [CreatedAt0], [u].[Email], [u].[EmailVerificationToken], [u].[EmailVerificationTokenExpiresAt], [u].[IsActive], [u].[IsEmailVerified], [u].[PasswordHash], [u].[RefreshToken], [u].[RefreshTokenExpiresAt], [u].[Role], [u].[UpdatedAt] AS [UpdatedAt0], [u].[Username], [s].[PostsId], [s].[TagsId], [s].[Id] AS [Id1], [s].[CreatedAt] AS [CreatedAt1], [s].[Name], [s].[UpdatedAt] AS [UpdatedAt1], [l].[Id] AS [Id2], [l].[CreateAt], [l].[PostId], [l].[UserId] AS [UserId0], [c0].[Id] AS [Id3], [c0].[Content] AS [Content0], [c0].[CreatedAt] AS [CreatedAt2], [c0].[IsEdited], [c0].[PostId] AS [PostId0], [c0].[UpdatedAt] AS [UpdatedAt2], [c0].[UserId] AS [UserId1]
    FROM [Posts] AS [p]
    INNER JOIN [Users] AS [u] ON [p].[UserId] = [u].[Id]
    LEFT JOIN (
        SELECT [p0].[PostsId], [p0].[TagsId], [t].[Id], [t].[CreatedAt], [t].[Name], [t].[UpdatedAt]
        FROM [PostTags] AS [p0]
        INNER JOIN [Tags] AS [t] ON [p0].[TagsId] = [t].[Id]
    ) AS [s] ON [p].[Id] = [s].[PostsId]
    LEFT JOIN [Likes] AS [l] ON [p].[Id] = [l].[PostId]
    LEFT JOIN [Comments] AS [c0] ON [p].[Id] = [c0].[PostId]
) AS [s0] ON [c1].[Id] = [s0].[CategoryId]
ORDER BY [c1].[Id], [s0].[Id], [s0].[Id0], [s0].[PostsId], [s0].[TagsId], [s0].[Id1], [s0].[Id2]
[2025-06-10 12:22:22 INF] Executed action method BlogApp.Controllers.CategoryController.GetCategoryById (BlogApp), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3037.4704ms.
[2025-06-10 12:22:22 INF] Executing OkObjectResult, writing value of type 'CategoryResponseDto'.
[2025-06-10 12:22:22 INF] Executed action BlogApp.Controllers.CategoryController.GetCategoryById (BlogApp) in 3628.7083ms
[2025-06-10 12:22:22 INF] Executed endpoint 'BlogApp.Controllers.CategoryController.GetCategoryById (BlogApp)'
[2025-06-10 12:22:22 INF] HTTP GET /api/categories/5 responded 200 in 3806.5924 ms
[2025-06-10 12:22:22 INF] Request finished HTTP/1.1 GET http://localhost:5263/api/categories/5 - 200 null application/json; charset=utf-8 3844.2554ms
[2025-06-10 12:31:50 INF] Application is shutting down...
[2025-06-10 12:31:56 INF] User profile is available. Using '/home/tarus/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
[2025-06-10 12:31:56 INF] Now listening on: http://localhost:5263
[2025-06-10 12:31:56 INF] Application started. Press Ctrl+C to shut down.
[2025-06-10 12:31:56 INF] Hosting environment: Development
[2025-06-10 12:31:56 INF] Content root path: /home/tarus/Desktop/personal/Playground/dotnet/DotnetBlogApp
[2025-06-10 12:31:57 INF] Request starting HTTP/1.1 GET http://localhost:5263/swagger/index.html - null null
[2025-06-10 12:31:57 INF] Request finished HTTP/1.1 GET http://localhost:5263/swagger/index.html - 200 null text/html;charset=utf-8 198.2804ms
[2025-06-10 12:31:58 INF] Request starting HTTP/1.1 GET http://localhost:5263/swagger/v1/swagger.json - null null
[2025-06-10 12:31:58 INF] Request finished HTTP/1.1 GET http://localhost:5263/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 184.3436ms
[2025-06-10 12:32:06 INF] Request starting HTTP/1.1 GET http://localhost:5263/api/comments - null null
[2025-06-10 12:32:06 WRN] Failed to determine the https port for redirect.
[2025-06-10 12:32:06 INF] Executing endpoint 'BlogApp.Controllers.CommentController.GetComments (BlogApp)'
[2025-06-10 12:32:06 INF] Route matched with {action = "GetComments", controller = "Comment"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] GetComments(BlogApp.Dtos.PagedFilters.CommentPagedRequest) on controller BlogApp.Controllers.CommentController (BlogApp).
[2025-06-10 12:32:06 INF] Executing action method BlogApp.Controllers.CommentController.GetComments (BlogApp) - Validation state: "Valid"
[2025-06-10 12:32:06 INF] Fetching comments with PageNumber: 1, PageSize: 5
[2025-06-10 12:32:06 INF] Service: Retrieving comments with PageNumber: 1, PageSize: 5
[2025-06-10 12:32:09 INF] Executed DbCommand (60ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Comments] AS [c]
[2025-06-10 12:32:09 WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
[2025-06-10 12:32:09 WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
[2025-06-10 12:32:09 INF] Executed DbCommand (37ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Id], [c0].[Content], [c0].[CreatedAt], [c0].[IsEdited], [c0].[PostId], [c0].[UpdatedAt], [c0].[UserId], [p].[Id], [p].[CategoryId], [p].[Content], [p].[CreatedAt], [p].[Slug], [p].[Title], [p].[UpdatedAt], [p].[UserId], [u].[Id], [u].[Avatar], [u].[Bio], [u].[CreatedAt], [u].[Email], [u].[EmailVerificationToken], [u].[EmailVerificationTokenExpiresAt], [u].[IsActive], [u].[IsEmailVerified], [u].[PasswordHash], [u].[RefreshToken], [u].[RefreshTokenExpiresAt], [u].[Role], [u].[UpdatedAt], [u].[Username]
FROM (
    SELECT [c].[Id], [c].[Content], [c].[CreatedAt], [c].[IsEdited], [c].[PostId], [c].[UpdatedAt], [c].[UserId]
    FROM [Comments] AS [c]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [c0]
INNER JOIN [Posts] AS [p] ON [c0].[PostId] = [p].[Id]
INNER JOIN [Users] AS [u] ON [c0].[UserId] = [u].[Id]
[2025-06-10 12:32:09 INF] Service: Retrieved 5 comments
[2025-06-10 12:32:09 INF] Successfully fetched 5 comments
[2025-06-10 12:32:09 INF] Executed action method BlogApp.Controllers.CommentController.GetComments (BlogApp), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3138.0949ms.
[2025-06-10 12:32:09 INF] Executing OkObjectResult, writing value of type 'BlogApp.Entities.PaginatedList`1[[BlogApp.Models.Dtos.CommentResponseDto, BlogApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2025-06-10 12:32:10 INF] Executed action BlogApp.Controllers.CommentController.GetComments (BlogApp) in 3757.1663ms
[2025-06-10 12:32:10 INF] Executed endpoint 'BlogApp.Controllers.CommentController.GetComments (BlogApp)'
[2025-06-10 12:32:10 INF] HTTP GET /api/comments responded 200 in 3952.6574 ms
[2025-06-10 12:32:10 INF] Request finished HTTP/1.1 GET http://localhost:5263/api/comments - 200 null application/json; charset=utf-8 3997.8737ms
[2025-06-10 12:32:28 INF] Request starting HTTP/1.1 GET http://localhost:5263/api/comments?IsEdited=true - null null
[2025-06-10 12:32:28 INF] Executing endpoint 'BlogApp.Controllers.CommentController.GetComments (BlogApp)'
[2025-06-10 12:32:28 INF] Route matched with {action = "GetComments", controller = "Comment"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] GetComments(BlogApp.Dtos.PagedFilters.CommentPagedRequest) on controller BlogApp.Controllers.CommentController (BlogApp).
[2025-06-10 12:32:28 INF] Executing action method BlogApp.Controllers.CommentController.GetComments (BlogApp) - Validation state: "Valid"
[2025-06-10 12:32:28 INF] Fetching comments with PageNumber: 1, PageSize: 5
[2025-06-10 12:32:28 INF] Service: Retrieving comments with PageNumber: 1, PageSize: 5
[2025-06-10 12:32:28 INF] Executed DbCommand (4ms) [Parameters=[@__request_IsEdited_Value_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Comments] AS [c]
WHERE [c].[IsEdited] = @__request_IsEdited_Value_0
[2025-06-10 12:32:28 WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
[2025-06-10 12:32:28 WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
[2025-06-10 12:32:28 INF] Executed DbCommand (8ms) [Parameters=[@__request_IsEdited_Value_0='?' (DbType = Boolean), @__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Id], [c0].[Content], [c0].[CreatedAt], [c0].[IsEdited], [c0].[PostId], [c0].[UpdatedAt], [c0].[UserId], [p].[Id], [p].[CategoryId], [p].[Content], [p].[CreatedAt], [p].[Slug], [p].[Title], [p].[UpdatedAt], [p].[UserId], [u].[Id], [u].[Avatar], [u].[Bio], [u].[CreatedAt], [u].[Email], [u].[EmailVerificationToken], [u].[EmailVerificationTokenExpiresAt], [u].[IsActive], [u].[IsEmailVerified], [u].[PasswordHash], [u].[RefreshToken], [u].[RefreshTokenExpiresAt], [u].[Role], [u].[UpdatedAt], [u].[Username]
FROM (
    SELECT [c].[Id], [c].[Content], [c].[CreatedAt], [c].[IsEdited], [c].[PostId], [c].[UpdatedAt], [c].[UserId]
    FROM [Comments] AS [c]
    WHERE [c].[IsEdited] = @__request_IsEdited_Value_0
    ORDER BY (SELECT 1)
    OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY
) AS [c0]
INNER JOIN [Posts] AS [p] ON [c0].[PostId] = [p].[Id]
INNER JOIN [Users] AS [u] ON [c0].[UserId] = [u].[Id]
[2025-06-10 12:32:28 INF] Service: Retrieved 0 comments
[2025-06-10 12:32:28 INF] Successfully fetched 0 comments
[2025-06-10 12:32:28 INF] Executed action method BlogApp.Controllers.CommentController.GetComments (BlogApp), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 99.4037ms.
[2025-06-10 12:32:28 INF] Executing OkObjectResult, writing value of type 'BlogApp.Entities.PaginatedList`1[[BlogApp.Models.Dtos.CommentResponseDto, BlogApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2025-06-10 12:32:28 INF] Executed action BlogApp.Controllers.CommentController.GetComments (BlogApp) in 113.2483ms
[2025-06-10 12:32:28 INF] Executed endpoint 'BlogApp.Controllers.CommentController.GetComments (BlogApp)'
[2025-06-10 12:32:28 INF] HTTP GET /api/comments responded 200 in 119.2515 ms
[2025-06-10 12:32:28 INF] Request finished HTTP/1.1 GET http://localhost:5263/api/comments?IsEdited=true - 200 null application/json; charset=utf-8 119.9541ms
