[2025-06-10 12:49:22 INF] User profile is available. Using '/home/tarus/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
[2025-06-10 12:49:22 INF] Now listening on: http://localhost:5263
[2025-06-10 12:49:22 INF] Application started. Press Ctrl+C to shut down.
[2025-06-10 12:49:22 INF] Hosting environment: Development
[2025-06-10 12:49:22 INF] Content root path: /home/tarus/Desktop/personal/Playground/dotnet/DotnetBlogApp
[2025-06-10 12:49:23 INF] Request starting HTTP/1.1 GET http://localhost:5263/swagger/index.html - null null
[2025-06-10 12:49:23 INF] Request finished HTTP/1.1 GET http://localhost:5263/swagger/index.html - 200 null text/html;charset=utf-8 205.353ms
[2025-06-10 12:49:23 INF] Request starting HTTP/1.1 GET http://localhost:5263/swagger/v1/swagger.json - null null
[2025-06-10 12:49:24 INF] Request finished HTTP/1.1 GET http://localhost:5263/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 193.2707ms
[2025-06-10 12:49:32 INF] Request starting HTTP/1.1 GET http://localhost:5263/api/posts - null null
[2025-06-10 12:49:32 WRN] Failed to determine the https port for redirect.
[2025-06-10 12:49:32 INF] Executing endpoint 'BlogApp.Controllers.PostController.GetAllPosts (BlogApp)'
[2025-06-10 12:49:32 INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts(BlogApp.Dtos.PagedFilters.PostPagedRequest) on controller BlogApp.Controllers.PostController (BlogApp).
[2025-06-10 12:49:33 INF] Executing action method BlogApp.Controllers.PostController.GetAllPosts (BlogApp) - Validation state: "Valid"
[2025-06-10 12:49:33 INF] Fetching posts - Page 1, Size 5
[2025-06-10 12:49:35 INF] Executed DbCommand (63ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Posts] AS [p]
[2025-06-10 12:49:35 WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
[2025-06-10 12:49:35 WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
[2025-06-10 12:49:35 WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
[2025-06-10 12:49:35 INF] Executed DbCommand (23ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p0].[Id], [p0].[CategoryId], [p0].[Content], [p0].[CreatedAt], [p0].[Slug], [p0].[Title], [p0].[UpdatedAt], [p0].[UserId], [u].[Id], [u].[Avatar], [u].[Bio], [u].[CreatedAt], [u].[Email], [u].[EmailVerificationToken], [u].[EmailVerificationTokenExpiresAt], [u].[IsActive], [u].[IsEmailVerified], [u].[PasswordHash], [u].[RefreshToken], [u].[RefreshTokenExpiresAt], [u].[Role], [u].[UpdatedAt], [u].[Username], [c].[Id], [c].[Name], [c0].[Id], [c0].[Content], [c0].[CreatedAt], [c0].[IsEdited], [c0].[PostId], [c0].[UpdatedAt], [c0].[UserId], [l].[Id], [l].[CreateAt], [l].[PostId], [l].[UserId], [s].[PostsId], [s].[TagsId], [s].[Id], [s].[CreatedAt], [s].[Name], [s].[UpdatedAt]
FROM (
    SELECT [p].[Id], [p].[CategoryId], [p].[Content], [p].[CreatedAt], [p].[Slug], [p].[Title], [p].[UpdatedAt], [p].[UserId]
    FROM [Posts] AS [p]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [p0]
INNER JOIN [Users] AS [u] ON [p0].[UserId] = [u].[Id]
INNER JOIN [Categories] AS [c] ON [p0].[CategoryId] = [c].[Id]
LEFT JOIN [Comments] AS [c0] ON [p0].[Id] = [c0].[PostId]
LEFT JOIN [Likes] AS [l] ON [p0].[Id] = [l].[PostId]
LEFT JOIN (
    SELECT [p1].[PostsId], [p1].[TagsId], [t].[Id], [t].[CreatedAt], [t].[Name], [t].[UpdatedAt]
    FROM [PostTags] AS [p1]
    INNER JOIN [Tags] AS [t] ON [p1].[TagsId] = [t].[Id]
) AS [s] ON [p0].[Id] = [s].[PostsId]
ORDER BY [p0].[Id], [u].[Id], [c].[Id], [c0].[Id], [l].[Id], [s].[PostsId], [s].[TagsId]
[2025-06-10 12:49:36 INF] Executed action method BlogApp.Controllers.PostController.GetAllPosts (BlogApp), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3077.9001ms.
[2025-06-10 12:49:36 INF] Executing OkObjectResult, writing value of type 'BlogApp.Entities.PaginatedList`1[[BlogApp.Models.Dtos.PostResponseDto, BlogApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2025-06-10 12:49:36 INF] Executed action BlogApp.Controllers.PostController.GetAllPosts (BlogApp) in 3747.9176ms
[2025-06-10 12:49:36 INF] Executed endpoint 'BlogApp.Controllers.PostController.GetAllPosts (BlogApp)'
[2025-06-10 12:49:36 INF] HTTP GET /api/posts responded 200 in 3930.6323 ms
[2025-06-10 12:49:36 INF] Request finished HTTP/1.1 GET http://localhost:5263/api/posts - 200 null application/json; charset=utf-8 3962.6403ms
[2025-06-10 12:56:25 INF] Application is shutting down...
[2025-06-10 12:56:29 INF] User profile is available. Using '/home/tarus/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
[2025-06-10 12:56:29 INF] Now listening on: http://localhost:5263
[2025-06-10 12:56:29 INF] Application started. Press Ctrl+C to shut down.
[2025-06-10 12:56:29 INF] Hosting environment: Development
[2025-06-10 12:56:29 INF] Content root path: /home/tarus/Desktop/personal/Playground/dotnet/DotnetBlogApp
[2025-06-10 12:56:30 INF] Request starting HTTP/1.1 GET http://localhost:5263/swagger/index.html - null null
[2025-06-10 12:56:30 INF] Request finished HTTP/1.1 GET http://localhost:5263/swagger/index.html - 200 null text/html;charset=utf-8 203.248ms
[2025-06-10 12:56:30 INF] Request starting HTTP/1.1 GET http://localhost:5263/swagger/v1/swagger.json - null null
[2025-06-10 12:56:31 INF] Request finished HTTP/1.1 GET http://localhost:5263/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 201.6316ms
[2025-06-10 12:56:33 INF] Request starting HTTP/1.1 GET http://localhost:5263/api/posts - null null
[2025-06-10 12:56:33 WRN] Failed to determine the https port for redirect.
[2025-06-10 12:56:33 INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '6/10/2025 9:50:46 AM', Current time (UTC): '6/10/2025 9:56:33 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
[2025-06-10 12:56:33 INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '6/10/2025 9:50:46 AM', Current time (UTC): '6/10/2025 9:56:33 AM'.
[2025-06-10 12:56:33 INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
[2025-06-10 12:56:33 INF] AuthenticationScheme: Bearer was challenged.
[2025-06-10 12:56:33 INF] HTTP GET /api/posts responded 401 in 146.6241 ms
[2025-06-10 12:56:33 INF] Request finished HTTP/1.1 GET http://localhost:5263/api/posts - 401 0 null 152.8868ms
[2025-06-10 12:56:53 INF] Request starting HTTP/1.1 POST http://localhost:5263/api/users/refresh-token - application/json 640
[2025-06-10 12:56:53 INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '6/10/2025 9:50:46 AM', Current time (UTC): '6/10/2025 9:56:53 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
[2025-06-10 12:56:53 INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '6/10/2025 9:50:46 AM', Current time (UTC): '6/10/2025 9:56:53 AM'.
[2025-06-10 12:56:53 INF] Executing endpoint 'BlogApp.Controllers.UsersController.RefreshToken (BlogApp)'
[2025-06-10 12:56:53 INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[BlogApp.Dtos.Response.UserResponseDto]] RefreshToken(BlogApp.Dtos.Request.RefreshTokenRequestDto) on controller BlogApp.Controllers.UsersController (BlogApp).
[2025-06-10 12:56:53 INF] Executing action method BlogApp.Controllers.UsersController.RefreshToken (BlogApp) - Validation state: "Valid"
[2025-06-10 12:56:56 INF] Executed DbCommand (82ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Avatar], [u].[Bio], [u].[CreatedAt], [u].[Email], [u].[EmailVerificationToken], [u].[EmailVerificationTokenExpiresAt], [u].[IsActive], [u].[IsEmailVerified], [u].[PasswordHash], [u].[RefreshToken], [u].[RefreshTokenExpiresAt], [u].[Role], [u].[UpdatedAt], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
[2025-06-10 12:56:56 INF] Executed DbCommand (12ms) [Parameters=[@p14='?' (DbType = Guid), @p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (DbType = DateTime2), @p3='?' (Size = 4000), @p4='?' (Size = 4000), @p5='?' (DbType = DateTime2), @p6='?' (DbType = Boolean), @p7='?' (DbType = Boolean), @p8='?' (Size = 8000) (DbType = Binary), @p9='?' (Size = 4000), @p10='?' (DbType = DateTime2), @p11='?' (Size = 4000), @p12='?' (DbType = DateTime2), @p13='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Users] SET [Avatar] = @p0, [Bio] = @p1, [CreatedAt] = @p2, [Email] = @p3, [EmailVerificationToken] = @p4, [EmailVerificationTokenExpiresAt] = @p5, [IsActive] = @p6, [IsEmailVerified] = @p7, [PasswordHash] = @p8, [RefreshToken] = @p9, [RefreshTokenExpiresAt] = @p10, [Role] = @p11, [UpdatedAt] = @p12, [Username] = @p13
OUTPUT 1
WHERE [Id] = @p14;
[2025-06-10 12:56:56 INF] Executed action method BlogApp.Controllers.UsersController.RefreshToken (BlogApp), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2935.9498ms.
[2025-06-10 12:56:56 INF] Executing OkObjectResult, writing value of type 'BlogApp.Dtos.Response.UserResponseDto'.
[2025-06-10 12:56:56 INF] Executed action BlogApp.Controllers.UsersController.RefreshToken (BlogApp) in 3564.2922ms
[2025-06-10 12:56:56 INF] Executed endpoint 'BlogApp.Controllers.UsersController.RefreshToken (BlogApp)'
[2025-06-10 12:56:56 INF] HTTP POST /api/users/refresh-token responded 200 in 3622.8546 ms
[2025-06-10 12:56:56 INF] Request finished HTTP/1.1 POST http://localhost:5263/api/users/refresh-token - 200 null application/json; charset=utf-8 3649.2954ms
[2025-06-10 12:57:11 INF] Request starting HTTP/1.1 GET http://localhost:5263/api/posts - null null
[2025-06-10 12:57:11 INF] Executing endpoint 'BlogApp.Controllers.PostController.GetAllPosts (BlogApp)'
[2025-06-10 12:57:11 INF] Route matched with {action = "GetAllPosts", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllPosts(BlogApp.Dtos.PagedFilters.PostPagedRequest) on controller BlogApp.Controllers.PostController (BlogApp).
[2025-06-10 12:57:11 INF] Executing action method BlogApp.Controllers.PostController.GetAllPosts (BlogApp) - Validation state: "Valid"
[2025-06-10 12:57:11 INF] Retrieving posts for user "50a22b64-7731-4357-b4b4-08dda5a9b977" with admin=true and request={"Id":null,"UserId":null,"CategoryId":null,"SearchQuery":null,"PageNumber":1,"PageSize":5}
[2025-06-10 12:57:11 INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Posts] AS [p]
[2025-06-10 12:57:11 WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
[2025-06-10 12:57:11 WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
[2025-06-10 12:57:11 WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
[2025-06-10 12:57:11 INF] Executed DbCommand (22ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p0].[Id], [p0].[CategoryId], [p0].[Content], [p0].[CreatedAt], [p0].[Slug], [p0].[Title], [p0].[UpdatedAt], [p0].[UserId], [u].[Id], [u].[Avatar], [u].[Bio], [u].[CreatedAt], [u].[Email], [u].[EmailVerificationToken], [u].[EmailVerificationTokenExpiresAt], [u].[IsActive], [u].[IsEmailVerified], [u].[PasswordHash], [u].[RefreshToken], [u].[RefreshTokenExpiresAt], [u].[Role], [u].[UpdatedAt], [u].[Username], [c].[Id], [c].[Name], [c0].[Id], [c0].[Content], [c0].[CreatedAt], [c0].[IsEdited], [c0].[PostId], [c0].[UpdatedAt], [c0].[UserId], [l].[Id], [l].[CreateAt], [l].[PostId], [l].[UserId], [s].[PostsId], [s].[TagsId], [s].[Id], [s].[CreatedAt], [s].[Name], [s].[UpdatedAt]
FROM (
    SELECT [p].[Id], [p].[CategoryId], [p].[Content], [p].[CreatedAt], [p].[Slug], [p].[Title], [p].[UpdatedAt], [p].[UserId]
    FROM [Posts] AS [p]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [p0]
INNER JOIN [Users] AS [u] ON [p0].[UserId] = [u].[Id]
INNER JOIN [Categories] AS [c] ON [p0].[CategoryId] = [c].[Id]
LEFT JOIN [Comments] AS [c0] ON [p0].[Id] = [c0].[PostId]
LEFT JOIN [Likes] AS [l] ON [p0].[Id] = [l].[PostId]
LEFT JOIN (
    SELECT [p1].[PostsId], [p1].[TagsId], [t].[Id], [t].[CreatedAt], [t].[Name], [t].[UpdatedAt]
    FROM [PostTags] AS [p1]
    INNER JOIN [Tags] AS [t] ON [p1].[TagsId] = [t].[Id]
) AS [s] ON [p0].[Id] = [s].[PostsId]
ORDER BY [p0].[Id], [u].[Id], [c].[Id], [c0].[Id], [l].[Id], [s].[PostsId], [s].[TagsId]
[2025-06-10 12:57:12 INF] Returning posts: {"PageNumber":1,"PageSize":5,"TotalCount":8,"TotalPages":2,"Items":[{"Id":"4a276107-419e-4978-271a-08dda5b90cfe","Title":"AutoMapping Post second testing","Slug":"automapping-post-second-testing","Content":"AutoMapping Post second testing Content","CreatedAt":"2025-06-07T14:47:16.0379637","UpdatedAt":"0001-01-01T00:00:00","UserId":"50a22b64-7731-4357-b4b4-08dda5a9b977","Username":"tarus","CategoryId":3,"CategoryName":"Business","LikesCount":0,"CommentsCount":0,"Tags":["Life"]},{"Id":"911f8fd7-0ce2-4b91-6163-08dda738eeb9","Title":"Pagination testing","Slug":"pagination-testing","Content":"Pagination testing","CreatedAt":"2025-06-09T12:35:11.9651877","UpdatedAt":"0001-01-01T00:00:00","UserId":"50a22b64-7731-4357-b4b4-08dda5a9b977","Username":"tarus","CategoryId":5,"CategoryName":"DevOps","LikesCount":0,"CommentsCount":0,"Tags":["How-to"]},{"Id":"74c6a484-8903-4543-6164-08dda738eeb9","Title":"Global pandemic testing","Slug":"global-pandemic-testing","Content":"Global pandemic testing content","CreatedAt":"2025-06-09T12:35:40.6090163","UpdatedAt":"0001-01-01T00:00:00","UserId":"50a22b64-7731-4357-b4b4-08dda5a9b977","Username":"tarus","CategoryId":4,"CategoryName":"Fashion","LikesCount":0,"CommentsCount":0,"Tags":["Life"]},{"Id":"92619535-7ef5-4616-6165-08dda738eeb9","Title":"Global pandemic testing now","Slug":"global-pandemic-testing-now","Content":"Global pandemic testing now content","CreatedAt":"2025-06-09T12:35:52.32104","UpdatedAt":"0001-01-01T00:00:00","UserId":"50a22b64-7731-4357-b4b4-08dda5a9b977","Username":"tarus","CategoryId":4,"CategoryName":"Fashion","LikesCount":1,"CommentsCount":0,"Tags":["Life"]},{"Id":"6f6a1c55-e40d-4c9d-6166-08dda738eeb9","Title":"Global pandemic testing now is crazy","Slug":"global-pandemic-testing-now-is-crazy","Content":"Global pandemic testing now content","CreatedAt":"2025-06-09T12:36:02.3563181","UpdatedAt":"0001-01-01T00:00:00","UserId":"50a22b64-7731-4357-b4b4-08dda5a9b977","Username":"tarus","CategoryId":4,"CategoryName":"Fashion","LikesCount":1,"CommentsCount":0,"Tags":["Life"]}],"HasPreviousPage":false,"HasNextPage":true}
[2025-06-10 12:57:12 INF] Fetched posts: {"PageNumber":1,"PageSize":5,"TotalCount":8,"TotalPages":2,"Items":[{"Id":"4a276107-419e-4978-271a-08dda5b90cfe","Title":"AutoMapping Post second testing","Slug":"automapping-post-second-testing","Content":"AutoMapping Post second testing Content","CreatedAt":"2025-06-07T14:47:16.0379637","UpdatedAt":"0001-01-01T00:00:00","UserId":"50a22b64-7731-4357-b4b4-08dda5a9b977","Username":"tarus","CategoryId":3,"CategoryName":"Business","LikesCount":0,"CommentsCount":0,"Tags":["Life"]},{"Id":"911f8fd7-0ce2-4b91-6163-08dda738eeb9","Title":"Pagination testing","Slug":"pagination-testing","Content":"Pagination testing","CreatedAt":"2025-06-09T12:35:11.9651877","UpdatedAt":"0001-01-01T00:00:00","UserId":"50a22b64-7731-4357-b4b4-08dda5a9b977","Username":"tarus","CategoryId":5,"CategoryName":"DevOps","LikesCount":0,"CommentsCount":0,"Tags":["How-to"]},{"Id":"74c6a484-8903-4543-6164-08dda738eeb9","Title":"Global pandemic testing","Slug":"global-pandemic-testing","Content":"Global pandemic testing content","CreatedAt":"2025-06-09T12:35:40.6090163","UpdatedAt":"0001-01-01T00:00:00","UserId":"50a22b64-7731-4357-b4b4-08dda5a9b977","Username":"tarus","CategoryId":4,"CategoryName":"Fashion","LikesCount":0,"CommentsCount":0,"Tags":["Life"]},{"Id":"92619535-7ef5-4616-6165-08dda738eeb9","Title":"Global pandemic testing now","Slug":"global-pandemic-testing-now","Content":"Global pandemic testing now content","CreatedAt":"2025-06-09T12:35:52.32104","UpdatedAt":"0001-01-01T00:00:00","UserId":"50a22b64-7731-4357-b4b4-08dda5a9b977","Username":"tarus","CategoryId":4,"CategoryName":"Fashion","LikesCount":1,"CommentsCount":0,"Tags":["Life"]},{"Id":"6f6a1c55-e40d-4c9d-6166-08dda738eeb9","Title":"Global pandemic testing now is crazy","Slug":"global-pandemic-testing-now-is-crazy","Content":"Global pandemic testing now content","CreatedAt":"2025-06-09T12:36:02.3563181","UpdatedAt":"0001-01-01T00:00:00","UserId":"50a22b64-7731-4357-b4b4-08dda5a9b977","Username":"tarus","CategoryId":4,"CategoryName":"Fashion","LikesCount":1,"CommentsCount":0,"Tags":["Life"]}],"HasPreviousPage":false,"HasNextPage":true}
[2025-06-10 12:57:12 INF] Executed action method BlogApp.Controllers.PostController.GetAllPosts (BlogApp), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 460.2187ms.
[2025-06-10 12:57:12 INF] Executing OkObjectResult, writing value of type 'BlogApp.Entities.PaginatedList`1[[BlogApp.Models.Dtos.PostResponseDto, BlogApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2025-06-10 12:57:12 INF] Executed action BlogApp.Controllers.PostController.GetAllPosts (BlogApp) in 482.3911ms
[2025-06-10 12:57:12 INF] Executed endpoint 'BlogApp.Controllers.PostController.GetAllPosts (BlogApp)'
[2025-06-10 12:57:12 INF] HTTP GET /api/posts responded 200 in 505.6404 ms
[2025-06-10 12:57:12 INF] Request finished HTTP/1.1 GET http://localhost:5263/api/posts - 200 null application/json; charset=utf-8 506.4948ms
[2025-06-10 12:58:21 INF] Request starting HTTP/1.1 GET http://localhost:5263/api/posts/4a276107-419e-4978-271a-08dda5b90cfe - null null
[2025-06-10 12:58:21 INF] Executing endpoint 'BlogApp.Controllers.PostController.GetPostById (BlogApp)'
[2025-06-10 12:58:21 INF] Route matched with {action = "GetPostById", controller = "Post"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPostById(System.Guid) on controller BlogApp.Controllers.PostController (BlogApp).
[2025-06-10 12:58:21 INF] Executing action method BlogApp.Controllers.PostController.GetPostById (BlogApp) - Validation state: "Valid"
[2025-06-10 12:58:21 INF] Fetching post "4a276107-419e-4978-271a-08dda5b90cfe" for user "50a22b64-7731-4357-b4b4-08dda5a9b977"
[2025-06-10 12:58:21 INF] Fetching post with ID "4a276107-419e-4978-271a-08dda5b90cfe" for user "50a22b64-7731-4357-b4b4-08dda5a9b977" (Role: Admin)
[2025-06-10 12:58:21 WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
[2025-06-10 12:58:21 INF] Executed DbCommand (17ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[Id], [s].[CategoryId], [s].[Content], [s].[CreatedAt], [s].[Slug], [s].[Title], [s].[UpdatedAt], [s].[UserId], [s].[Id0], [s].[Avatar], [s].[Bio], [s].[CreatedAt0], [s].[Email], [s].[EmailVerificationToken], [s].[EmailVerificationTokenExpiresAt], [s].[IsActive], [s].[IsEmailVerified], [s].[PasswordHash], [s].[RefreshToken], [s].[RefreshTokenExpiresAt], [s].[Role], [s].[UpdatedAt0], [s].[Username], [s].[Id1], [s].[Name], [c0].[Id], [c0].[Content], [c0].[CreatedAt], [c0].[IsEdited], [c0].[PostId], [c0].[UpdatedAt], [c0].[UserId], [l].[Id], [l].[CreateAt], [l].[PostId], [l].[UserId], [s0].[PostsId], [s0].[TagsId], [s0].[Id], [s0].[CreatedAt], [s0].[Name], [s0].[UpdatedAt]
FROM (
    SELECT TOP(1) [p].[Id], [p].[CategoryId], [p].[Content], [p].[CreatedAt], [p].[Slug], [p].[Title], [p].[UpdatedAt], [p].[UserId], [u].[Id] AS [Id0], [u].[Avatar], [u].[Bio], [u].[CreatedAt] AS [CreatedAt0], [u].[Email], [u].[EmailVerificationToken], [u].[EmailVerificationTokenExpiresAt], [u].[IsActive], [u].[IsEmailVerified], [u].[PasswordHash], [u].[RefreshToken], [u].[RefreshTokenExpiresAt], [u].[Role], [u].[UpdatedAt] AS [UpdatedAt0], [u].[Username], [c].[Id] AS [Id1], [c].[Name]
    FROM [Posts] AS [p]
    INNER JOIN [Users] AS [u] ON [p].[UserId] = [u].[Id]
    INNER JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
    WHERE [p].[Id] = @__id_0
) AS [s]
LEFT JOIN [Comments] AS [c0] ON [s].[Id] = [c0].[PostId]
LEFT JOIN [Likes] AS [l] ON [s].[Id] = [l].[PostId]
LEFT JOIN (
    SELECT [p0].[PostsId], [p0].[TagsId], [t].[Id], [t].[CreatedAt], [t].[Name], [t].[UpdatedAt]
    FROM [PostTags] AS [p0]
    INNER JOIN [Tags] AS [t] ON [p0].[TagsId] = [t].[Id]
) AS [s0] ON [s].[Id] = [s0].[PostsId]
ORDER BY [s].[Id], [s].[Id0], [s].[Id1], [c0].[Id], [l].[Id], [s0].[PostsId], [s0].[TagsId]
[2025-06-10 12:58:21 INF] Returning post: {"Id":"4a276107-419e-4978-271a-08dda5b90cfe","Title":"AutoMapping Post second testing","Slug":"automapping-post-second-testing","Content":"AutoMapping Post second testing Content","CreatedAt":"2025-06-07T14:47:16.0379637","UpdatedAt":"0001-01-01T00:00:00","UserId":"50a22b64-7731-4357-b4b4-08dda5a9b977","Username":"tarus","CategoryId":3,"CategoryName":"Business","LikesCount":0,"CommentsCount":0,"Tags":["Life"]}
[2025-06-10 12:58:21 INF] Fetched post: {"Id":"4a276107-419e-4978-271a-08dda5b90cfe","Title":"AutoMapping Post second testing","Slug":"automapping-post-second-testing","Content":"AutoMapping Post second testing Content","CreatedAt":"2025-06-07T14:47:16.0379637","UpdatedAt":"0001-01-01T00:00:00","UserId":"50a22b64-7731-4357-b4b4-08dda5a9b977","Username":"tarus","CategoryId":3,"CategoryName":"Business","LikesCount":0,"CommentsCount":0,"Tags":["Life"]}
[2025-06-10 12:58:21 INF] Executed action method BlogApp.Controllers.PostController.GetPostById (BlogApp), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 153.1937ms.
[2025-06-10 12:58:21 INF] Executing OkObjectResult, writing value of type 'BlogApp.Models.Dtos.PostResponseDto'.
[2025-06-10 12:58:21 INF] Executed action BlogApp.Controllers.PostController.GetPostById (BlogApp) in 156.9084ms
[2025-06-10 12:58:21 INF] Executed endpoint 'BlogApp.Controllers.PostController.GetPostById (BlogApp)'
[2025-06-10 12:58:21 INF] HTTP GET /api/posts/4a276107-419e-4978-271a-08dda5b90cfe responded 200 in 165.2457 ms
[2025-06-10 12:58:21 INF] Request finished HTTP/1.1 GET http://localhost:5263/api/posts/4a276107-419e-4978-271a-08dda5b90cfe - 200 null application/json; charset=utf-8 165.8464ms
[2025-06-10 13:05:01 INF] Application is shutting down...
[2025-06-10 13:05:04 INF] User profile is available. Using '/home/tarus/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
[2025-06-10 13:05:04 INF] Now listening on: http://localhost:5263
[2025-06-10 13:05:04 INF] Application started. Press Ctrl+C to shut down.
[2025-06-10 13:05:04 INF] Hosting environment: Development
[2025-06-10 13:05:04 INF] Content root path: /home/tarus/Desktop/personal/Playground/dotnet/DotnetBlogApp
[2025-06-10 13:05:05 INF] Request starting HTTP/1.1 GET http://localhost:5263/swagger/index.html - null null
[2025-06-10 13:05:05 INF] Request finished HTTP/1.1 GET http://localhost:5263/swagger/index.html - 200 null text/html;charset=utf-8 200.1654ms
[2025-06-10 13:05:05 INF] Request starting HTTP/1.1 GET http://localhost:5263/swagger/v1/swagger.json - null null
[2025-06-10 13:05:06 INF] Request finished HTTP/1.1 GET http://localhost:5263/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 222.1644ms
[2025-06-10 13:05:16 INF] Request starting HTTP/1.1 GET http://localhost:5263/api/tags - null null
[2025-06-10 13:05:16 WRN] Failed to determine the https port for redirect.
[2025-06-10 13:05:16 INF] Executing endpoint 'BlogApp.Controllers.TagController.GetTags (BlogApp)'
[2025-06-10 13:05:16 INF] Route matched with {action = "GetTags", controller = "Tag"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTags(BlogApp.Dtos.PagedFilters.TagPagedRequest) on controller BlogApp.Controllers.TagController (BlogApp).
[2025-06-10 13:05:17 INF] Executing action method BlogApp.Controllers.TagController.GetTags (BlogApp) - Validation state: "Valid"
[2025-06-10 13:05:17 INF] [GET] GetTags called with request: {"Id":null,"SearchQuery":null,"PageNumber":1,"PageSize":5}
[2025-06-10 13:05:17 INF] Fetching all tags with request: {"Id":null,"SearchQuery":null,"PageNumber":1,"PageSize":5}
[2025-06-10 13:05:19 INF] Executed DbCommand (72ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Tags] AS [t]
[2025-06-10 13:05:19 WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
[2025-06-10 13:05:19 WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
[2025-06-10 13:05:20 INF] Executed DbCommand (36ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[CreatedAt], [t0].[Name], [t0].[UpdatedAt], [s].[PostsId], [s].[TagsId], [s].[Id], [s].[CategoryId], [s].[Content], [s].[CreatedAt], [s].[Slug], [s].[Title], [s].[UpdatedAt], [s].[UserId]
FROM (
    SELECT [t].[Id], [t].[CreatedAt], [t].[Name], [t].[UpdatedAt]
    FROM [Tags] AS [t]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t0]
LEFT JOIN (
    SELECT [p].[PostsId], [p].[TagsId], [p0].[Id], [p0].[CategoryId], [p0].[Content], [p0].[CreatedAt], [p0].[Slug], [p0].[Title], [p0].[UpdatedAt], [p0].[UserId]
    FROM [PostTags] AS [p]
    INNER JOIN [Posts] AS [p0] ON [p].[PostsId] = [p0].[Id]
) AS [s] ON [t0].[Id] = [s].[TagsId]
ORDER BY [t0].[Id], [s].[PostsId], [s].[TagsId]
[2025-06-10 13:05:20 INF] Fetched 5 tags
[2025-06-10 13:05:20 INF] Returning 5 tags
[2025-06-10 13:05:20 INF] Executed action method BlogApp.Controllers.TagController.GetTags (BlogApp), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3176.458ms.
[2025-06-10 13:05:20 INF] Executing OkObjectResult, writing value of type 'BlogApp.Entities.PaginatedList`1[[BlogApp.Models.Dtos.TagResponseDto, BlogApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2025-06-10 13:05:20 INF] Executed action BlogApp.Controllers.TagController.GetTags (BlogApp) in 3715.8173ms
[2025-06-10 13:05:20 INF] Executed endpoint 'BlogApp.Controllers.TagController.GetTags (BlogApp)'
[2025-06-10 13:05:20 INF] HTTP GET /api/tags responded 200 in 3902.8848 ms
[2025-06-10 13:05:20 INF] Request finished HTTP/1.1 GET http://localhost:5263/api/tags - 200 null application/json; charset=utf-8 3934.2179ms
[2025-06-10 13:05:42 INF] Request starting HTTP/1.1 GET http://localhost:5263/api/tags - null null
[2025-06-10 13:05:42 INF] Executing endpoint 'BlogApp.Controllers.TagController.GetTags (BlogApp)'
[2025-06-10 13:05:42 INF] Route matched with {action = "GetTags", controller = "Tag"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTags(BlogApp.Dtos.PagedFilters.TagPagedRequest) on controller BlogApp.Controllers.TagController (BlogApp).
[2025-06-10 13:05:42 INF] Executing action method BlogApp.Controllers.TagController.GetTags (BlogApp) - Validation state: "Valid"
[2025-06-10 13:05:42 INF] [GET] GetTags called with request: {"Id":null,"SearchQuery":null,"PageNumber":1,"PageSize":5}
[2025-06-10 13:05:42 INF] Fetching all tags with request: {"Id":null,"SearchQuery":null,"PageNumber":1,"PageSize":5}
[2025-06-10 13:05:42 INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Tags] AS [t]
[2025-06-10 13:05:42 INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[CreatedAt], [t0].[Name], [t0].[UpdatedAt], [s].[PostsId], [s].[TagsId], [s].[Id], [s].[CategoryId], [s].[Content], [s].[CreatedAt], [s].[Slug], [s].[Title], [s].[UpdatedAt], [s].[UserId]
FROM (
    SELECT [t].[Id], [t].[CreatedAt], [t].[Name], [t].[UpdatedAt]
    FROM [Tags] AS [t]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t0]
LEFT JOIN (
    SELECT [p].[PostsId], [p].[TagsId], [p0].[Id], [p0].[CategoryId], [p0].[Content], [p0].[CreatedAt], [p0].[Slug], [p0].[Title], [p0].[UpdatedAt], [p0].[UserId]
    FROM [PostTags] AS [p]
    INNER JOIN [Posts] AS [p0] ON [p].[PostsId] = [p0].[Id]
) AS [s] ON [t0].[Id] = [s].[TagsId]
ORDER BY [t0].[Id], [s].[PostsId], [s].[TagsId]
[2025-06-10 13:05:42 INF] Fetched 5 tags
[2025-06-10 13:05:42 INF] Returning 5 tags
[2025-06-10 13:05:42 INF] Executed action method BlogApp.Controllers.TagController.GetTags (BlogApp), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 59.2579ms.
[2025-06-10 13:05:42 INF] Executing OkObjectResult, writing value of type 'BlogApp.Entities.PaginatedList`1[[BlogApp.Models.Dtos.TagResponseDto, BlogApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2025-06-10 13:05:42 INF] Executed action BlogApp.Controllers.TagController.GetTags (BlogApp) in 62.6293ms
[2025-06-10 13:05:42 INF] Executed endpoint 'BlogApp.Controllers.TagController.GetTags (BlogApp)'
[2025-06-10 13:05:42 INF] HTTP GET /api/tags responded 200 in 68.7683 ms
[2025-06-10 13:05:42 INF] Request finished HTTP/1.1 GET http://localhost:5263/api/tags - 200 null application/json; charset=utf-8 69.6257ms
